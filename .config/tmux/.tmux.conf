unbind C-b
set -g prefix C-Space

set -s escape-time 0

unbind r
bind r source-file ~/.config/tmux/.tmux.conf \; display "Reloaded ~/.config/tmux/.tmux.conf"

set -g mouse on

unbind % # default: split vertically
unbind '"' # default: split horizontally

# You might think that something is reversed here, between my keystroke v (for vertical) and the tmux flag -h (for horizontal). Well, yes and no.
# The flag -c execute a shell command, and #{pane_current_path} simply bring you back where you were in the filesystem.
unbind v
bind v split-window -h -c "#{pane_current_path}"

unbind h
bind h split-window -v -c "#{pane_current_path}"

bind -n C-1 select-window -t 1
bind -n C-2 select-window -t 2
bind -n C-3 select-window -t 3
bind -n C-4 select-window -t 4

unbind f
bind f new-window ~/.config/tmux/tmux-sessionizer.sh

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

set -g history-limit 100000

unbind n # default: move to next window
unbind w # default: change current window interactively

bind n command-prompt "rename-window '%%'"
bind w new-window -c "#{pane_current_path}"

#

set -g base-index 1
set-window-option -g pane-base-index 1

set-window-option -g mode-keys vi

unbind -T copy-mode-vi Space; # default: begin select
unbind -T copy-mode-vi Enter; # default: end select

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
